eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9nbwogIHBhdGg6IHNyYy9ydXRnZXJzCgpwaXBlbGluZToKICBjb3JlOgogICAgaW1hZ2U6IGdvbGFuZzoxLjctYWxwaW5lCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBHT1BBVEg9L2dvCiAgICBjb21tYW5kczoKICAgICAgLSBnbyB2ZXJzaW9uCiAgICAgIC0gZ28gdGVzdCAtdgogICAgICAtIGdvIGJ1aWxkCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHB1bGxfcmVxdWVzdCwgdGFnLCBkZXBsb3ltZW50XQogIGJ1aWxkOgogICAgaW1hZ2U6IGxpYnJhcnkvZ29sYW5nOjEuNwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gR09QQVRIPS9nbwogICAgY29tbWFuZHM6CiAgICAgIC0gbWtkaXIgL2dvL2Rpc3QgJiYgY2QgL2dvL2Rpc3QKICAgICAgLSAoZXhwb3J0IEdPT1M9bGludXggR09BUkNIPWFtZDY0OyBnbyBidWlsZCBydXRnZXJzICYmIHRhciAtY3pmIHJ1dGdlcnMtc2NyYXBlci0kR09PUy0kR09BUkNILnRhci5neiBydXRnZXJzIC0tcmVtb3ZlLWZpbGVzKQogICAgICAtIChleHBvcnQgR09PUz1saW51eCBHT0FSQ0g9Mzg2OyBnbyBidWlsZCBydXRnZXJzICYmIHRhciAtY3pmIHJ1dGdlcnMtc2NyYXBlci0kR09PUy0kR09BUkNILnRhci5neiBydXRnZXJzIC0tcmVtb3ZlLWZpbGVzKQogICAgICAtIChleHBvcnQgR09PUz1saW51eCBHT0FSQ0g9YXJtOyBnbyBidWlsZCBydXRnZXJzICYmIHRhciAtY3pmIHJ1dGdlcnMtc2NyYXBlci0kR09PUy0kR09BUkNILnRhci5neiBydXRnZXJzIC0tcmVtb3ZlLWZpbGVzKQogICAgICAtIChleHBvcnQgR09PUz1saW51eCBHT0FSQ0g9YXJtNjQ7IGdvIGJ1aWxkIHJ1dGdlcnMgJiYgdGFyIC1jemYgcnV0Z2Vycy1zY3JhcGVyLSRHT09TLSRHT0FSQ0gudGFyLmd6IHJ1dGdlcnMgLS1yZW1vdmUtZmlsZXMpCiAgICAgIC0gKGV4cG9ydCBHT09TPXdpbmRvd3MgR09BUkNIPWFtZDY0OyBnbyBidWlsZCBydXRnZXJzICYmIHRhciAtY3pmIHJ1dGdlcnMtc2NyYXBlci0kR09PUy0kR09BUkNILnRhci5neiBydXRnZXJzLmV4ZSAtLXJlbW92ZS1maWxlcykKICAgICAgLSAoZXhwb3J0IEdPT1M9d2luZG93cyBHT0FSQ0g9Mzg2OyBnbyBidWlsZCBydXRnZXJzICYmIHRhciAtY3pmIHJ1dGdlcnMtc2NyYXBlci0kR09PUy0kR09BUkNILnRhci5neiBydXRnZXJzLmV4ZSAtLXJlbW92ZS1maWxlcykKICAgICAgLSAoZXhwb3J0IEdPT1M9ZGFyd2luIEdPQVJDSD1hbWQ2NDsgZ28gYnVpbGQgcnV0Z2VycyAmJiB0YXIgLWN6ZiBydXRnZXJzLXNjcmFwZXItJEdPT1MtJEdPQVJDSC50YXIuZ3ogcnV0Z2VycyAtLXJlbW92ZS1maWxlcykKICAgICAgLSAoZXhwb3J0IEdPT1M9ZGFyd2luIEdPQVJDSD0zODY7IGdvIGJ1aWxkIHJ1dGdlcnMgJiYgdGFyIC1jemYgcnV0Z2Vycy1zY3JhcGVyLSRHT09TLSRHT0FSQ0gudGFyLmd6IHJ1dGdlcnMgLS1yZW1vdmUtZmlsZXMpCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogW3RhZ10KCiAgcmVsZWFzZToKICAgIGltYWdlOiBsaWJyYXJ5L2dvbGFuZzoxLjcKICAgIGVudmlyb25tZW50OgogICAgICAtIEdPUEFUSD0vZ28KICAgIGNvbW1hbmRzOgogICAgICAtIGdpdCBmZXRjaCAtLXRhZ3MKICAgICAgLSBnaXQgZmV0Y2ggb3JpZ2luCiAgICAgIC0gZ28gZ2V0IGdpdGh1Yi5jb20vYWt0YXUvZ2l0aHViLXJlbGVhc2UKICAgICAgLSBleHBvcnQgR0lUSFVCX1RPS0VOPSRHSVRIVUJfQVBJX1RPS0VOCiAgICAgIC0gVEFHPSQoZ2l0IGRlc2NyaWJlIC0tYWJicmV2PTAgLS10YWdzKQogICAgICAtIGdpdGh1Yi1yZWxlYXNlIHJlbGVhc2UgLS11c2VyIHRldmplZiAtLXJlcG8gcnV0Z2Vycy1zY3JhcGVyIC0tdGFnICIkVEFHIiAtLW5hbWUgInJ1dGdlcnMtc2NyYXBlci0kVEFHIiB8fCB0cnVlCiAgICAgIC0gY2QgL2dvL2Rpc3QKICAgICAgLSBmb3IgaSBpbiAqOyBkbyBnaXRodWItcmVsZWFzZSB1cGxvYWQgLS11c2VyIHRldmplZiAtLXJlcG8gcnV0Z2Vycy1zY3JhcGVyIC0tdGFnICRUQUcgLS1uYW1lICRpIC0tZmlsZSAkaSB8fCB0cnVlOyBkb25lCiAgICB3aGVuOgogICAgICBldmVudDogW3RhZ10K.Hk3FYbQC-lEeXkB02TYMpNwc0wkjoeBhMr37ubIplEk